---
import Close from "@/components/astro/ui/Close.astro";
import ArrowRightShort from "@/components/astro/ui/ArrowRightShort.astro";

import * as m from "@/paraglide/messages";
---

<nav
	id="sidenav"
	class="pointer-events-auto fixed bottom-0 left-0 top-0 z-[100] hidden size-full h-[100vh] items-stretch justify-end">
	<div
		id="sidenavScroll"
		class="relative flex max-h-full min-w-full max-w-full translate-x-full flex-col gap-7 overflow-auto bg-primary px-6 py-6 text-primary-foreground sm:min-w-[60vw] sm:max-w-[70vw] md:min-w-[35vw] md:px-16 md:py-28 lg:max-w-[50vw] 2xl:max-w-[30vw]">
		<button
			id="sidenavCloseButton"
			class="absolute right-4 top-4 hidden size-10 md:block lg:right-8 lg:top-8 3xl:size-16">
			<span class="sr-only">Close Side Navigation</span>
			<Close />
		</button>
		<div class="flex flex-col gap-4 md:hidden">
			<p
				class="whitespace-nowrap text-[0.65rem] font-normal uppercase leading-7 text-muted-foreground md:text-xs">
				/ {m.polite_tangy_osprey_hunt()} /
			</p>
			<ul class="flex flex-col gap-2 uppercase">
				<li class="text-lg md:text-xl">
					<a class="block py-1" href="#top">{m.zesty_plane_oryx_stir()}</a>
				</li>
				<li class="text-lg md:text-xl">
					<a class="block py-1" href="#service"
						>{m.bold_late_gecko_transform()}</a
					>
				</li>
				<li class="text-lg md:text-xl">
					<a class="block py-1" href="#process"
						>{m.careful_lucky_cowfish_dine()}</a
					>
				</li>
				<li class="text-lg md:text-xl">
					<a class="block py-1" href="#price"
						>{m.grand_keen_antelope_endure()}</a
					>
				</li>
				<li class="text-lg md:text-xl">
					<a class="block py-1" href="#vision">{m.smart_zippy_shell_dust()}</a>
				</li>
				<li class="text-lg md:text-xl">
					<a href="#getstarted" class="flex items-center gap-1 py-2"
						>{m.knotty_keen_meerkat_vent()}
						<span class="size-4"><ArrowRightShort /></span></a
					>
				</li>
			</ul>
		</div>
		<div class="flex flex-col gap-4 md:gap-7">
			<p
				class="whitespace-nowrap text-[0.65rem] font-normal uppercase leading-7 text-muted-foreground md:text-xs">
				/ {m.maroon_mild_pig_grasp()} /
			</p>
			<div class="hidden flex-col items-start gap-2 md:flex">
				<h2 class="flex text-lg sm:text-2xl md:text-4xl">
					{m.heroic_green_racoon_believe()}
				</h2>
				<p class="max-w-[400px] text-sm text-muted-foreground xl:max-w-[700px]">
					{m.full_factual_trout_lock()}
				</p>
			</div>
			<ul
				class="grid grid-cols-2 grid-rows-3 text-primary-foreground/70 [column-gap:2rem] [row-gap:0.5rem] md:text-primary-foreground">
				<li class="font-sans text-sm font-semibold md:text-base">
					<a class="block py-1" href="/en/" data-lang="en">English</a>
				</li>
				<li class="font-sans text-sm font-semibold md:text-base">
					<a class="block py-1" href="/tl/" data-lang="tl">Tagalog</a>
				</li>
				<li class="font-sans text-sm font-semibold md:text-base">
					<a class="block py-1" href="/id/" data-lang="id">Bahasa</a>
				</li>
				<li class="text-sm md:text-base">
					<a class="block py-1" href="/zh-HK/" data-lang="zh-HK">繁體中文</a>
				</li>
				<li class="text-sm md:text-base">
					<a class="block py-1" href="/zh-CN/" data-lang="zh-CN">简体中文</a>
				</li>
				<li class="font-sans text-sm font-semibold md:text-base">
					<a class="block py-1" href="/vi/" data-lang="vi">Ngôn ngữ</a>
				</li>
			</ul>
			<a
				href="/en/credits/"
				class="block py-1 font-sans text-xs font-semibold text-muted-foreground underline md:-translate-y-2">
				<span class="sr-only">{m.noisy_fluffy_fish_jest()}</span>
				{m.caring_icy_goat_fold()}</a
			>
		</div>
	</div>
</nav>

<style>
	#sidenavScroll {
		will-change: transform, opacity;
	}
</style>

<script>
	import Lenis from "lenis";
	import gsap from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	gsap.registerPlugin(ScrollTrigger);

	const sidenavScroll = document.getElementById("sidenavScroll");
	const sidenav = document.getElementById("sidenav");
	const sidenavCloseButton = document.getElementById("sidenavCloseButton");

	const lenis = new Lenis({
		wrapper: sidenavScroll!,
		overscroll: false,
	});

	lenis.on("scroll", ScrollTrigger.update);

	gsap.ticker.add((time) => {
		lenis.raf(time * 1000);
	});

	sidenavCloseButton?.addEventListener("click", () => {
		window?.closeSidenav();
	});

	sidenav?.addEventListener(
		"click",
		(e) => {
			if (e.target !== sidenav) return;
			window?.closeSidenav();
		},
		{
			passive: true,
		},
	);
</script>
